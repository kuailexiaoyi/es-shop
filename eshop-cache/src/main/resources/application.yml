spring:
  cache:
    ehcache:
      config: classpath:/ehcache-config.xml
  kafka:
    producer:
      # 发生错误时，消息重发的次数
      retries: 0
      # 当多个消息需要被发送到同一个分区时，生产者会将他们放到同一个批次里。该参数指定一个批次可以使用的内存大小。
      batch-size: 16384
      # 设置生产者内存缓冲区大小
      buffer-memory: 33554432
      # 键的序列化方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      # 值的序列化方式
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      # acks=0 时，生产者在成功写入消息之前不会等待任何来自服务器的响应
      # acks=1 时，只要集群的首领节点收到消息，生产者就会收到来自一个服务器成功响应
      # acks=2 时，只有当所有复制的节点收到消息，生产者才会收到一个来自服务器的成功响应
      acks: 1
      bootstrap-servers: 192.168.0.102:9092
    consumer:
      # 自动提交的时间间隔，在spring boot 2.x版本中这里采用的是值的类型为Duration，需要符合特定的格式，1S,1M,2H,5D
      auto-commit-interval: 1
      # 该属性指定了消费者在读取一个没有偏移量的分区或者偏移量无效的情况下该如何处理：
      # latest(默认值)在该偏移量无效的情况下，消费者将从最新的记录中开始读取数据（在消费者启动之后生成的记录）
      # earliest ：在偏移量无效的情况下，消费者将从起始位置读取分区的记录。
      auto-offset-reset: latest
      # 是否自动提交偏移量，默认值为true，为了避免重复数据和数据丢失，可以将其设置为false，然后手动提交偏移量
      enable-auto-commit: false
      # 键的反序列化方式
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      # 值的反序列化方式
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: eshop-cache-topic
      bootstrap-servers: 192.168.0.102:9092
    listener:
      # 在监听器容器中运行的线程数
      concurrency: 5
      # listener 负责ack，每调用一次，就立即commit
      ack-mode: manual_immediate
      missing-topics-fatal: false
server:
  port: 8080
